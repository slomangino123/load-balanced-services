
user nginx;

worker_processes    auto;

events { worker_connections 1024; }

http {
    include             /etc/nginx/proxy.conf;
    include             /etc/nginx/mime.types;
    limit_req_zone      $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens       off;
    sendfile            on;
    keepalive_timeout   29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;

    upstream webapi {
        server          service2:80;
    }

    server {
        listen     8201;
        add_header Strict-Transport-Security max-age=15768000;
        return     301 https://$host$request_uri;
    }

    server {
        listen                      8202 ssl;
        server_name                 $hostname;
        ssl_certificate             /etc/ssl/certs/localhost.crt;
        ssl_certificate_key         /etc/ssl/certs/localhost.key;
        ssl_protocols               TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers   on;
        ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve              secp384r1;
        ssl_session_cache           shared:SSL:10m;
        ssl_session_tickets         off;

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;

        location / {
            proxy_pass http://webapi;
            limit_req  zone=one burst=10 nodelay;
        }
    }
}